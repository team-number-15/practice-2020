##
# Clone and pull the repo
##
- name: Set up git configuration
  yum: 
    name: git 
    state: latest
  become: yes


- name: Clone or pull the latest code
  git: 
    repo: "{{ app.code_repository_url }}"
    dest: "{{ app.repo_dir }}"

##
# Set up all the dependencies in a virtualenv required by the Django app
##
- name: Recursively remove old virtualenv directory
  file:
    path: "{{ app.venv_dir }}"
    state: absent

- name: Create a virtualenv directory
  file: 
    path: "{{ app.venv_dir }}"
    state: directory

- name: Install dependencies
  pip:    
    requirements: "{{ app.app_dir }}/requirements.txt"
    virtualenv: "{{ app.venv_dir }}"
    virtualenv_python: python3.6

- name: Create the .env file for running ad-hoc python commands in our virtualenv
  template: 
    src: "env.j2"
    dest: "{{ app.app_dir }}/.env"
  become: yes

##
# Run db migrations and get all static files
##
- name: Make migrations
  shell: ". {{ app.app_dir }}/.env; {{ app.venv_python }} {{ app.app_dir }}/manage.py makemigrations"
  become: yes

- name: Migrate database
  django_manage: app_path={{ app.app_dir }}
                                 command=migrate
                                 virtualenv={{ app.venv_dir }}
  # become: yes

- name: Get all static files
  django_manage: app_path={{ app.app_dir }}
                                 command=collectstatic
                                 virtualenv={{ app.venv_dir }}
  become: yes

